name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Task-Manager-Springboot/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Task-Manager-Springboot/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/task-manager-api
  KUBERNETES_NAMESPACE: task-manager

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: |
        cd Task-Manager-Springboot
        mvn clean test

    - name: Build application
      run: |
        cd Task-Manager-Springboot
        mvn clean package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./Task-Manager-Springboot
        file: ./Task-Manager-Springboot/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure kubectl
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Deploy to Kubernetes
      run: |
        # Update image tag in deployment
        sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" Task-Manager-Deploy/dev/k8s/task_manager_api_deployment.yml
        
        # Apply deployment
        kubectl apply -f Task-Manager-Deploy/dev/k8s/task_manager_api_deployment.yml
        
        # Wait for rollout
        kubectl rollout status deployment/task-manager-api -n ${{ env.KUBERNETES_NAMESPACE }}

    - name: Verify deployment
      run: |
        kubectl get pods -l app=task-manager-api -n ${{ env.KUBERNETES_NAMESPACE }}
        kubectl get services -n ${{ env.KUBERNETES_NAMESPACE }}
